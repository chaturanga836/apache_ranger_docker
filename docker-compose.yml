
services:
  ranger-db:
    image: postgres:15-alpine
    container_name: ranger-db
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ranger_db_data:/var/lib/postgresql/data  # Added volume for data persistence
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"] # Added healthcheck
      interval: 10s
      timeout: 5s
      retries: 5

  ranger-admin:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DB_HOST: ${DB_HOST}
        DB_PORT: ${DB_PORT}
        DB_NAME: ${DB_NAME}
        DB_USER: ${DB_USER}
        DB_PASSWORD: ${DB_PASSWORD}
        DB_FLAVOR: ${DB_FLAVOR}
        SQL_CONNECTOR_JAR: ${SQL_CONNECTOR_JAR}
        RANGER_ADMIN_PASSWORD: ${RANGER_ADMIN_PASSWORD}
        KEYADMIN_PASSWORD: ${KEYADMIN_PASSWORD}
        RANGER_TAGSYNC_PASSWORD: ${RANGER_TAGSYNC_PASSWORD}
        RANGER_USERSYNC_PASSWORD: ${RANGER_USERSYNC_PASSWORD}
        AUDIT_STORE: ${AUDIT_STORE}
    image: test-ranger-admin:latest
    container_name: ranger-admin
    restart: always # Added for resilience
    ports:
      - "6080:6080"

    environment:
      DB_FLAVOR: ${DB_FLAVOR}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      SQL_CONNECTOR_JAR: ${SQL_CONNECTOR_JAR}
      RANGER_ADMIN_PASSWORD: ${RANGER_ADMIN_PASSWORD}
      KEYADMIN_PASSWORD: ${KEYADMIN_PASSWORD}
      RANGER_TAGSYNC_PASSWORD: ${RANGER_TAGSYNC_PASSWORD}
      RANGER_USERSYNC_PASSWORD: ${RANGER_USERSYNC_PASSWORD}
      AUDIT_STORE: ${AUDIT_STORE}
    volumes:
      - ranger_log_data:/var/log/ranger
      - ranger_run_data:/var/run/ranger
    depends_on:
      ranger-db:
        condition: service_healthy

volumes:
  ranger_db_data:
  ranger_log_data:
  ranger_run_data: